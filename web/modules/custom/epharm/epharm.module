<?php

/**
 * @file
 * Contains epharm.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function epharm_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the epharm module.
    case 'help.page.epharm':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Epharm section site') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function epharm_theme($existing, $type, $theme, $path) {
  return [
    'epharm' => [                            // the entity id// template directory in module or theme
      'template' => 'epharm',
      // defines base template as /artwork.html.twig
      'render element' => 'elements',
      // Theme API call to define the container of the entity in the render array
      // The entity will be prefixed with a hash sign as ['elements']['#artwork']
    ],
    'epharm_list' => [
      'variables' => [
        'epharm' => NULL,
        'author' => NULL,
        'date' => NULL,
        'tags' => NULL,
        'get' => NULL,
        'search' => NULL,
      ],
      'path' => $path . '/templates/',
      'template' => 'epharm-list',
    ],
    'epharm_home' => [
      'variables' => ['epharm' => NULL, 'author' => NULL, 'date' => NULL],
      'path' => $path . '/templates/',
      'template' => 'epharm-home',
    ],
    'epharm_banner_block' => [
      'variables' => ['epharm' => NULL],
      'path' => $path . '/templates/',
      'template' => 'epharm-banner',
    ],
    'epharm_menu_block' => [
      'variables' => [
        'epharm' => NULL,
        'cme' => NULL,
        'admin' => NULL,
        'member' => NULL,
        'role_doctor' => NULL,
        'role_cme' => NULL,
        'role_member' => NULL,
      ],
      'path' => $path . '/templates/',
      'template' => 'epharm-menu',
    ],
  ];
}

/**
 * Implements hook_mail().
 */
function epharm_mail($key, &$message, $params) {
  $options = [
    'langcode' => $message['langcode'],
  ];
  $message['headers'] = [
    'MIME-Version' => '1.0',
    'Content-Type' => 'text/html; charset=UTF-8; format=flowed; delsp=yes',
    'Content-Transfer-Encoding' => '8Bit',
  ];

  switch ($key) {
    case 'createPost':
      $message['from'] = $params['from'];
      $message['subject'] = t('@type article from @user for Approval',
        ['@type' => $params['type'], '@user' => $params['user']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'updatePost':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Approved: @title by HKDU', ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'subscription':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('[Subscriber] @title', ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'newsletter':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('[Newsletter] @title', ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'sendEventPayment':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Link for payment settlement for the event ready register for you.',
        ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'sendQRcode':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('@title.', ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'payment':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('@title.', ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'ads':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('@title.', ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
    case 'toUser':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('@title.', ['@title' => $params['title']], $options);
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function epharm_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {

  // Insert the new entity into a fictional table of all entities.
  $user = \Drupal::currentUser();
  if (!in_array('administrator', $user->getRoles()) || !in_array('admins', $user->getRoles())) {
    if ($entity->getEntityTypeId() == 'clinical_focus' || $entity->getEntityTypeId() == 'drug_news' || $entity->getEntityTypeId() == 'pharm_dir' || $entity->getEntityTypeId() == 'special_offer' || $entity->getEntityTypeId() == 'event') {
      //create notification
      if ($entity->get('moderation_state')->value == 'pending') {
        createNotify(NULL, $entity->id(), $entity->getEntityTypeId());
      }
      //email to admin
      $mailManager = \Drupal::service('plugin.manager.mail');
      $module = 'epharm';
      $key = 'createPost';
      $to = \Drupal::state()->get($entity->getEntityTypeId(), 'leung0369@gmail.com');
      $params['message'] = '<p>Body:</p><p>' . $entity->get('name')->value . '</p><p>' . $user->getDisplayName() . ' has a content in ' . mapping_key($entity->getEntityTypeId()) . ' waiting for your approval, the content as below:</p><p>' . $entity->get('field_description')->value . '</p>';

      $params['type'] = mapping_key($entity->getEntityTypeId());
      $params['user'] = $user->getDisplayName();
      $params['from'] = $user->getEmail();
      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $send = TRUE;

      $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
      if ($result['result'] !== TRUE) {
        \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
      }
      else {
        \Drupal::messenger()->addMessage(t('Your message has been sent.'));
      }

      if ($entity->get('moderation_state')->value == 'published') {
        //send email
        $mailManager = \Drupal::service('plugin.manager.mail');
        $module = 'epharm';
        $key = 'subscription';
        $to = '';
        if (getEmailsubscription($entity->getEntityTypeId())) {
          $to .= getEmailsubscription($entity->getEntityTypeId());
        }
        if ($entity->get('field_newsletter')->getValue()) {
          $to .= ',' . getEmailNewsletter($entity->get('field_newsletter')->getValue());
          $key = 'newsletter';
        }
        $params['title'] = $entity->get('name')->value;
        //  $to = $user->getEmail().',hkdumail@gmail.com,dr.alfredtang@gmail.com';
        $params['message'] = '<p>Body:</p><p>' . $entity->get('name')->value . '</p><p>' . $entity->get('field_description')->value . '</p>';
        $params['from'] = \Drupal::config('system.site')->get('mail');
        $langcode = \Drupal::currentUser()->getPreferredLangcode();
        $send = TRUE;


        $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

        if ($result['result'] !== TRUE) {
          \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
        }
        else {
          \Drupal::messenger()->addMessage(t('Your message has been sent.'));
        }
      }
    }
    if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'ads') {
      //create notify
      //createNotify(NULL, $entity->id(), $entity->getEntityTypeId());
      //send email
      $mailManager = \Drupal::service('plugin.manager.mail');
      $module = 'epharm';
      $user = \Drupal\user\Entity\User::load($entity->get('uid')->target_id);
      $key = 'ads';
      $to = \Drupal::state()->get('ads', 'leung0369@gmail.com');
      $params['title'] = 'HKDU – Dr. ' . $user->get('field_first_name')->value . ' has create a Classified Ads ';
      $params['message'] = '<p>Dr. ' . $user->get('field_first_name')->value . ' of HKDU No. ' . $user->get('field_mchk_license')->value . '. has created a post of Classified Ad at the members area</p><p>Please approve and they will be asked to make payment.</p><p>Thanks,</p><p>-	HKDU admin</p>';
      $params['from'] = \Drupal::config('system.site')->get('mail');
      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $send = TRUE;
      $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

      if ($result['result'] !== TRUE) {
        \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
      }
      else {
        \Drupal::messenger()->addMessage(t('Your message has been sent.'));
      }
    }

    if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'forum') {
      //create notification
      //createNotify(NULL, $entity->id(), $entity->getEntityTypeId());
      //send email
      $mailManager = \Drupal::service('plugin.manager.mail');
      $module = 'epharm';
      $user = \Drupal\user\Entity\User::load($entity->get('uid')->target_id);
      $key = 'ads';
      $to = \Drupal::state()->get('ads', 'leung0369@gmail.com');
      $params['title'] = 'HKDU – Dr. ' . $user->get('field_first_name')->value . ' has create a Forum Topic ';
      $params['message'] = '<p>Dr. ' . $user->get('field_first_name')->value . ' of HKDU No. ' . $user->get('field_mchk_license')->value . '. has created a post of Classified Ad at the members area</p><p>Please approve and they will be asked to make payment.</p><p>Thanks,</p><p>-	HKDU admin</p>';
      $params['from'] = \Drupal::config('system.site')->get('mail');
      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $send = TRUE;
      $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

      if ($result['result'] !== TRUE) {
        \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
      }
      else {
        \Drupal::messenger()->addMessage(t('Your message has been sent.'));
      }
    }
    if ($entity->getEntityTypeId() == 'node') {
      if ($entity->get('moderation_state')->value == 'pending') {
        createNotify(NULL, $entity->id(), $entity->getEntityTypeId());
      }

    }
  }
}

/**
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function epharm_entity_update(Drupal\Core\Entity\EntityInterface $entity) {

  // Insert the new entity into a fictional table of all entities.
  if ($entity->getEntityTypeId() == 'node') {
    if ($entity->get('moderation_state')->value == 'pending') {
      createNotify(NULL, $entity->id(), $entity->getEntityTypeId());
    }

  }
  if ($entity->getEntityTypeId() == 'clinical_focus' || $entity->getEntityTypeId() == 'drug_news' || $entity->getEntityTypeId() == 'pharm_dir' || $entity->getEntityTypeId() == 'special_offer' || $entity->getEntityTypeId() == 'event' || ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'ads') || $entity->getEntityTypeId() == 'node' && $entity->bundle() == 'forum') {
    if (!$entity->get('status')->value && $entity->get('moderation_state')->value == 'draft' || !$entity->get('status')->value && $entity->get('moderation_state')->value == 'pending') {
      UpdateStateStatus($entity->id(), $entity->getEntityTypeId(), $entity->get('moderation_state')->value);
    }
    if ($entity->get('moderation_state')->value == 'pending') {
      createNotify(NULL, $entity->id(), $entity->getEntityTypeId());
    }
    if ($entity->get('moderation_state')->value == 'published') {

      $user = \Drupal\user\Entity\User::load($entity->getOwnerId());
      //create notify
      createNotify($entity->getOwnerId(), $entity->id(), $entity->getEntityTypeId());
      //send email
      $mailManager = \Drupal::service('plugin.manager.mail');
      $module = 'epharm';
      $key = 'subscription';
      $to = '';
      if (getEmailsubscription($entity->getEntityTypeId())) {
        $to .= getEmailsubscription($entity->getEntityTypeId());
      }
      if ($entity->getEntityTypeId() != 'node') {
        if ($entity->get('field_newsletter')->getValue()) {
          $to .= ',' . getEmailNewsletter($entity->get('field_newsletter')->getValue());
          $key = 'newsletter';
        }
      }
      if ($entity->getEntityTypeId() == 'node') {
        $params['title'] = $entity->get('title')->value;
        $body = $entity->get('body')->value;
      }
      else {
        $params['title'] = $entity->get('name')->value;
        $body = $entity->get('field_description')->value;
      }

      //  $to = $user->getEmail().',hkdumail@gmail.com,dr.alfredtang@gmail.com';
      $params['message'] = '<p>Body:</p><p>' . $params['title'] . '</p><p>' . $body . '</p>';
      $params['from'] = \Drupal::config('system.site')->get('mail');
      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $send = TRUE;


      $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

      $approval = $mailManager->mail($module, 'updatePost', $user->getEmail(), $langcode, $params, NULL, $send);

      if ($approval['result'] !== TRUE) {
        \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
      }
      else {
        \Drupal::messenger()->addMessage(t('Your message has been sent.'));
      }

      if ($result['result'] !== TRUE) {
        \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
      }
      else {
        \Drupal::messenger()->addMessage(t('Your message has been sent.'));
      }
    }

  }

}

/**
 * Implements hook_entity_presave().
 */
function epharm_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
  // Insert the new entity into a fictional table of all entities.
  $entity_Arr = $entity->toArray();
  if ($entity_Arr['moderation_state']) {
    if ($entity->get('moderation_state')->value == 'draft' || $entity->get('moderation_state')->value == 'pending' || $entity->get('moderation_state')->value == 'expired' || $entity->get('moderation_state')->value == 'archived') {
      if ($entity->getEntityTypeId() != 'content_moderation_state') {
        $entity->set('status', 0);
      }
    }
  }
}

/**
 * @param $key
 *
 * @return string
 */
function mapping_key($key) {
  $type = '';
  switch ($key) {
    case 'event':
      $type = 'Event';
      break;
    case 'clinical_focus':
      $type = 'Clinical Focus';
      break;
    case 'drug_news':
      $type = 'Drug News';
      break;
    case 'pharm_dir':
      $type = 'Pharm Dir';
      break;
    case 'special_offer':
      $type = 'Special Offers';
      break;

  }
  return $type;
}

function UpdateStateStatus($id, $type, $state) {

  $query = \Drupal::database()->update('content_moderation_state_field_data');
  $query->fields([
    'moderation_state' => $state,
  ]);
  $query->condition('content_entity_type_id', $type);
  $query->condition('content_entity_id', $id);
  $query->execute();

  $query2 = \Drupal::database()->update('content_moderation_state_field_revision');
  $query2->fields([
    'moderation_state' => $state,
  ]);
  $query2->condition('content_entity_type_id', $type);
  $query2->condition('content_entity_id', $id);
  $query2->execute();

  //update status type
  UpdateStatus($type, $id);

}

function epharm_views_pre_render(\Drupal\views\ViewExecutable $view) {

  if ($view->id() == "manage_clinical_focus") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'clinical_focus'));
    }
  }
  if ($view->id() == "manage_drug_news") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'drug_news'));
    }
  }
  if ($view->id() == "manage_drug_search") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'drug_search'));
    }
  }
  if ($view->id() == "manage_events") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'event'));
    }
  }
  if ($view->id() == "manage_pharm_dir") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'pharm_dir'));
    }
  }
  if ($view->id() == "manage_special_offers") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'special_offer'));
    }
  }
  if ($view->id() == "manage_cme_events") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'cme_event'));
    }
  }
  if ($view->id() == "quizzes_result_report") {
    foreach ($view->result as $value) {
      $value->_entity->set('field_count', getResultEntity(getQuizbyResult($value->_entity->get('id')->value), 'quiz'));
    }
  }
  if ($view->id() == "manage_about") {
    foreach ($view->result as $value) {
      // var_dump($value->_entity);
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'about'));
    }
  }
  if ($view->id() == "manage_e_healthy") {
    foreach ($view->result as $value) {
      // var_dump($value->_entity);
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'healthy'));
    }
  }
  if ($view->id() == "manage_news") {
    foreach ($view->result as $value) {
      // var_dump($value->_entity);
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'news'));
    }
  }
  if ($view->id() == "manage_press_release") {
    foreach ($view->result as $value) {
      // var_dump($value->_entity);
      $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'media_entity'));
    }
  }

  //    if ($view->id() == "manage_event_enrolled") {
  //        foreach ($view->result as $value) {
  //            // var_dump($value->_entity);
  //            $value->_entity->set('order_number', getResultEntity($value->_entity->get('id')->value, 'media_entity'));
  //        }
  //    }
}

function getResultEntity($id, $type) {
  $query = \Drupal::database()->select('entity_view', 'ev');
  $query->fields('ev');
  $query->condition('entity_id', $id);
  $query->condition('entity_type', $type);
  $result = $query->execute()->fetchAll();
  $total = 0;
  foreach ($result as $r) {
    $total += $r->count;
  }
  return $total;
}

function getStateId($id, $type) {
  $query = \Drupal::database()->select('content_moderation_state_field_data', 'ev');
  $query->fields('ev');
  $query->condition('content_entity_id', $id);
  $query->condition('content_entity_type_id', $type);
  $query->range(0, 1);
  $result = $query->execute()->fetchAll();
  $state = reset($result);
  return $state->id;
}

function UpdateStatus($type, $id) {
  if ($type != 'content_moderation_state') {
    $query = \Drupal::database()->update($type . '_field_data');
    $query->fields([
      'status' => 0,
    ]);
    if ($type == 'node') {
      $query->condition('nid', $id);
    }
    else {
      $query->condition('id', $id);
    }

    $query->execute();
  }
}

function getQuizbyResult($resultId) {
  $result = \Drupal\cme_result\Entity\Result::load($resultId);
  return $result->get('field_quiz')->target_id;
}


function epharm_form_alter(
  &$form,
  \Drupal\Core\Form\FormStateInterface $form_state,
  $form_id
) {
  //var_dump($form['field_audience']);die;
  if (isset($form['field_audience'])) {
    unset($form['field_audience']['widget']['#options']['_none']);
  }

}

/**
 * implement send email to user register type email
 */
function getEmailsubscription($type) {
  $ids = \Drupal::entityQuery('user')->condition('status', 1)->condition('field_subscription', $type)->execute();
  $users = \Drupal\user\Entity\User::loadMultiple($ids);
  $email = FALSE;
  $emails = [];
  if ($users) {
    foreach ($users as $user) {
      $emails[] = $user->getEmail();
    }
    $email = implode(',', $emails);
  }

  return $email;
}

/**
 * implement send email to user register type email
 */
function getEmailNewsletter($tags = []) {
  $key = [];
  if ($tags) {
    foreach ($tags as $tag) {
      $key[] = $tag['target_id'];
    }
  }
  $ids = \Drupal::entityQuery('user')->condition('status', 1)->condition('field_newsletter', $key, 'IN')->execute();
  $users = \Drupal\user\Entity\User::loadMultiple($ids);
  $email = FALSE;
  $emails = [];
  if ($users) {
    foreach ($users as $user) {
      $emails[] = $user->getEmail();
    }
    $email = implode(',', $emails);
  }

  return $email;
}

/**
 * @return string[]
 */
function getListType() {
  return [
    'news',
    'node',
    'drug_news',
    'event',
    'cme_event',
    'clinical_focus',
    'pharm_dir',
    'special_offer',
    'drug_search',
    'external_link',
    'cme_links',
    'guidelines',
    'about',
    'ads',
    'banner',
    'doctor',
  ];
}
