<?php

/**
 * @file
 * Contains epharm.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function epharm_help($route_name, RouteMatchInterface $route_match)
{
    switch ($route_name) {
        // Main module help for the epharm module.
        case 'help.page.epharm':
            $output = '';
            $output .= '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('Epharm section site') . '</p>';
            return $output;

        default:
    }
}

/**
 * Implements hook_theme().
 */
function epharm_theme($existing, $type, $theme, $path)
{
    return [
        'epharm' => [                            // the entity id// template directory in module or theme
            'template' => 'epharm',                // defines base template as /artwork.html.twig
            'render element' => 'elements',          // Theme API call to define the container of the entity in the render array
            // The entity will be prefixed with a hash sign as ['elements']['#artwork']
        ],
        'epharm_list' => [
            'variables' => ['epharm' => NULL, 'author' => NULL, 'date' => NULL, 'tags' => NULL, 'get' => NULL, 'search' => NULL],
            'path' => $path . '/templates/',
            'template' => 'epharm-list'
        ],
        'epharm_home' => [
            'variables' => ['epharm' => NULL, 'author' => NULL, 'date' => NULL],
            'path' => $path . '/templates/',
            'template' => 'epharm-home'
        ],
        'epharm_banner_block' => [
            'variables' => ['epharm' => NULL],
            'path' => $path . '/templates/',
            'template' => 'epharm-banner'
        ],
        'epharm_menu_block' => [
            'variables' => ['epharm' => NULL, 'cme' => NULL],
            'path' => $path . '/templates/',
            'template' => 'epharm-menu'
        ],
    ];
}

/**
 * Implements hook_mail().
 */
function epharm_mail($key, &$message, $params)
{
    $options = array(
        'langcode' => $message['langcode'],
    );

    switch ($key) {
        case 'createPost':
            $message['from'] = $params['from'];
            $message['subject'] = t('Post created: @title by @user', array('@title' => $params['title'], '@user' => $params['user']), $options);
            $message['body'][] = $params['message'];
            break;
        case 'updatePost':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('Approved: @title by HKDU', array('@title' => $params['title']), $options);
            $message['body'][] = $params['message'];
            break;
        case 'sendEventPayment':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('Link for payment settlement for the event ready register for you.', array('@title' => $params['title']), $options);
            $message['body'][] = $params['message'];
            break;
    }
}

function epharm_entity_insert(Drupal\Core\Entity\EntityInterface $entity)
{

    // Insert the new entity into a fictional table of all entities.
    $user = \Drupal::currentUser();
    if (!in_array('administrator', $user->getRoles()) || !in_array('admins', $user->getRoles())) {
        if ($entity->getEntityTypeId() == 'clinical_focus' ||
            $entity->getEntityTypeId() == 'drug_news' ||
            $entity->getEntityTypeId() == 'pharm_dir' ||
            $entity->getEntityTypeId() == 'special_offer' ||
            $entity->getEntityTypeId() == 'drug_search' ||
            $entity->getEntityTypeId() == 'about' ||
            $entity->getEntityTypeId() == 'banner' ||
            $entity->getEntityTypeId() == 'event_org' ||
            $entity->getEntityTypeId() == 'guidelines' ||
            $entity->getEntityTypeId() == 'cme_links' ||
            $entity->getEntityTypeId() == 'question' ||
            $entity->getEntityTypeId() == 'quiz' ||
            $entity->getEntityTypeId() == 'cme_event' ||
            $entity->getEntityTypeId() == 'doctor' ||
            $entity->getEntityTypeId() == 'download' ||
            $entity->getEntityTypeId() == 'external_link' ||
            $entity->getEntityTypeId() == 'gallery' ||
            $entity->getEntityTypeId() == 'healthy' ||
            $entity->getEntityTypeId() == 'hospital' ||
            $entity->getEntityTypeId() == 'media_entity' ||
            $entity->getEntityTypeId() == 'news' ||
            $entity->getEntityTypeId() == 'public_links' ||
            $entity->getEntityTypeId() == 'tools'

        ) {
            $mailManager = \Drupal::service('plugin.manager.mail');
            $module = 'epharm';
            $key = 'createPost';
            $to = \Drupal::config('system.site')->get('mail');
            $params['message'] = 'User ' . $user->getDisplayName() . ' just create the post ' . $entity->getName() . ' of type ' . $entity->getEntityTypeId();
            $params['title'] = $entity->getName();
            $params['user'] = $user->getDisplayName();
            $params['from'] = $user->getEmail();
            $langcode = \Drupal::currentUser()->getPreferredLangcode();
            $send = true;

            $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
            if ($result['result'] !== true) {
                \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
            } else {
                \Drupal::messenger()->addMessage(t('Your message has been sent.'));
            }
        }
    }

}


function epharm_entity_update(Drupal\Core\Entity\EntityInterface $entity)
{

    // Insert the new entity into a fictional table of all entities.
    if ($entity->getEntityTypeId() == 'clinical_focus' ||
        $entity->getEntityTypeId() == 'drug_news' ||
        $entity->getEntityTypeId() == 'pharm_dir' ||
        $entity->getEntityTypeId() == 'special_offer' ||
        $entity->getEntityTypeId() == 'drug_search' ||
        $entity->getEntityTypeId() == 'about' ||
        $entity->getEntityTypeId() == 'banner' ||
        $entity->getEntityTypeId() == 'event_org' ||
        $entity->getEntityTypeId() == 'guidelines' ||
        $entity->getEntityTypeId() == 'cme_links' ||
        $entity->getEntityTypeId() == 'question' ||
        $entity->getEntityTypeId() == 'quiz' ||
        $entity->getEntityTypeId() == 'cme_event' ||
        $entity->getEntityTypeId() == 'doctor' ||
        $entity->getEntityTypeId() == 'download' ||
        $entity->getEntityTypeId() == 'external_link' ||
        $entity->getEntityTypeId() == 'gallery' ||
        $entity->getEntityTypeId() == 'healthy' ||
        $entity->getEntityTypeId() == 'hospital' ||
        $entity->getEntityTypeId() == 'media_entity' ||
        $entity->getEntityTypeId() == 'news' ||
        $entity->getEntityTypeId() == 'public_links' ||
        $entity->getEntityTypeId() == 'tools'

    ) {
        if (!$entity->get('status')->value && $entity->get('moderation_state')->value == 'draft'
            || !$entity->get('status')->value && $entity->get('moderation_state')->value == 'pending') {
            UpdateStateStatus($entity->id(), $entity->getEntityTypeId(), $entity->get('moderation_state')->value);
        }
        if ($entity->get('status')->value == 1) {
            $user = \Drupal\user\Entity\User::load($entity->getOwnerId());
            $mailManager = \Drupal::service('plugin.manager.mail');
            $module = 'epharm';
            $key = 'updatePost';
            $to = $user->getEmail();
            $params['message'] = $entity->get('field_description')->value;
            $params['title'] = $entity->getName();
            $params['user'] = $user->getDisplayName();
            $params['from'] = \Drupal::config('system.site')->get('mail');
            $langcode = \Drupal::currentUser()->getPreferredLangcode();
            $send = true;

            $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
            if ($result['result'] !== true) {
                \Drupal::messenger()->addMessage(t('There was a problem sending your message and it was not sent.'), 'error');
            } else {
                \Drupal::messenger()->addMessage(t('Your message has been sent.'));
            }
        }

    }

}

/**
 * Implements hook_entity_presave().
 */
function epharm_entity_presave(Drupal\Core\Entity\EntityInterface $entity)
{
    // Insert the new entity into a fictional table of all entities.
//    if ($entity->getEntityTypeId() == 'event' ||
//        $entity->getEntityTypeId() == 'clinical_focus' ||
//        $entity->getEntityTypeId() == 'drug_news' ||
//        $entity->getEntityTypeId() == 'pharm_dir' ||
//        $entity->getEntityTypeId() == 'special_offer' ||
//        $entity->getEntityTypeId() == 'drug_search'
//    ) {
//     //   var_dump($entity->get('moderation_state')->value);die;
//        if(!$entity->get('status')->value && $entity->get('moderation_state')->value=='draft'
//            || !$entity->get('status')->value && $entity->get('moderation_state')->value=='pending'){
//            $entity->set('status',0);
//            $entity->set('moderation_state',$entity->get('moderation_state')->value);
//        }
//
//    }

}

function UpdateStateStatus($id, $type, $state)
{

    $query = \Drupal::database()->update('content_moderation_state_field_data');
    $query->fields([
        'moderation_state' => $state,
    ]);
    $query->condition('content_entity_type_id', $type);
    $query->condition('content_entity_id', $id);
    $query->execute();

    $query2 = \Drupal::database()->update('content_moderation_state_field_revision');
    $query2->fields([
        'moderation_state' => $state,
    ]);
    $query2->condition('content_entity_type_id', $type);
    $query2->condition('content_entity_id', $id);
    $query2->execute();

    //update status type
    UpdateStatus($type, $id);

}

function epharm_views_pre_render(\Drupal\views\ViewExecutable $view)
{

    if ($view->id() == "manage_clinical_focus") {
        foreach ($view->result as $value) {
            $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'clinical_focus'));
        }
    }
    if ($view->id() == "manage_drug_news") {
        foreach ($view->result as $value) {
            $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'drug_news'));
        }
    }
    if ($view->id() == "manage_drug_search") {
        foreach ($view->result as $value) {
            $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'drug_search'));
        }
    }
    if ($view->id() == "manage_events") {
        foreach ($view->result as $value) {
            $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'event'));
        }
    }
    if ($view->id() == "manage_pharm_dir") {
        foreach ($view->result as $value) {
            $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'pharm_dir'));
        }
    }
    if ($view->id() == "manage_special_offers") {
        foreach ($view->result as $value) {
            $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'special_offer'));
        }
    }
    if ($view->id() == "manage_cme_events") {
        foreach ($view->result as $value) {
            $value->_entity->set('field_count', getResultEntity($value->_entity->get('id')->value, 'cme_event'));
        }
    }
}

function getResultEntity($id, $type)
{
    $query = \Drupal::database()->select('entity_view', 'ev');
    $query->fields('ev');
    $query->condition('entity_id', $id);
    $query->condition('entity_type', $type);
    $result = $query->execute()->fetchAll();
    $total = 0;
    foreach ($result as $r) {
        $total += $r->count;
    }
    return $total;
}

function getStateId($id, $type)
{
    $query = \Drupal::database()->select('content_moderation_state_field_data', 'ev');
    $query->fields('ev');
    $query->condition('content_entity_id', $id);
    $query->condition('content_entity_type_id', $type);
    $query->range(0, 1);
    $result = $query->execute()->fetchAll();
    $state = reset($result);
    return $state->id;
}

function UpdateStatus($type, $id)
{
    $query = \Drupal::database()->update($type . '_field_data');
    $query->fields([
        'status' => 0,
    ]);
    $query->condition('id', $id);
    $query->execute();
}